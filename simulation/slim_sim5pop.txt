initialize() {
    initializeTreeSeq();
    initializeMutationRate(6e-9);
    initializeMutationType("m1", 0.5, "f", 0.0);
    initializeGenomicElementType("g1", m1, 1.0);
    initializeGenomicElement(g1, 0, 1e8-1);
    initializeRecombinationRate(2e-8);
}

1 late() {
    sim.addSubpop("p8", 20000);
}

3501 early() {
    catn("Splitting p8 into p0, p1, p2, p3 and p4");
    sim.addSubpopSplit("p0", 4000, p8);
    sim.addSubpopSplit("p1", 4000, p8);
    sim.addSubpopSplit("p2", 4000, p8);
    sim.addSubpopSplit("p3", 4000, p8);
    sim.addSubpopSplit("p4", 4000, p8);
}

3501 late() {
    p8.setSubpopulationSize(0);
}

4007 late() {
    p0.outputVCFSample(100, replace=F, filePath="p0.vcf"); 
    p1.outputVCFSample(100, replace=F, filePath="p1.vcf"); 
    p2.outputVCFSample(100, replace=F, filePath="p2.vcf"); 
    p3.outputVCFSample(100, replace=F, filePath="p3.vcf"); 
    p4.outputVCFSample(100, replace=F, filePath="p4.vcf"); 

    p0.outputVCFSample(200, replace=F, filePath="p0_200.vcf"); 
    p1.outputVCFSample(200, replace=F, filePath="p1_200.vcf"); 
    p2.outputVCFSample(200, replace=F, filePath="p2_200.vcf"); 
    p3.outputVCFSample(200, replace=F, filePath="p3_200.vcf"); 
    p4.outputVCFSample(200, replace=F, filePath="p4_200.vcf"); 
 
    p0.outputVCFSample(500, replace=F, filePath="p0_500.vcf"); 
    p1.outputVCFSample(500, replace=F, filePath="p1_500.vcf"); 
    p2.outputVCFSample(500, replace=F, filePath="p2_500.vcf"); 
    p3.outputVCFSample(500, replace=F, filePath="p3_500.vcf"); 
    p4.outputVCFSample(500, replace=F, filePath="p4_500.vcf"); 

    p0.outputVCFSample(1000, replace=F, filePath="p0_1000.vcf"); 
    p1.outputVCFSample(1000, replace=F, filePath="p1_1000.vcf"); 
    p2.outputVCFSample(1000, replace=F, filePath="p2_1000.vcf"); 
    p3.outputVCFSample(1000, replace=F, filePath="p3_1000.vcf"); 
    p4.outputVCFSample(1000, replace=F, filePath="p4_1000.vcf"); 

    p0.outputVCFSample(2000, replace=F, filePath="p0_2000.vcf"); 
    p1.outputVCFSample(2000, replace=F, filePath="p1_2000.vcf"); 
    p2.outputVCFSample(2000, replace=F, filePath="p2_2000.vcf"); 
    p3.outputVCFSample(2000, replace=F, filePath="p3_2000.vcf"); 
    p4.outputVCFSample(2000, replace=F, filePath="p4_2000.vcf"); 
}

4008 early() {
catn("set up p6 as an admixture of p0, p1, p2, p3 and p4");
sim.addSubpop("p6", 1000);
p6.setMigrationRates(c(p0, p1,p2,p3,p4), c(0.2, 0.1,0.1,0.4,0.2));
}

4008 late() {
p6.setMigrationRates(c(p0, p1,p2,p3,p4), c(0.0, 0.0,0.0, 0.0,0.0));
p0.setSubpopulationSize(0);
p1.setSubpopulationSize(0);
p2.setSubpopulationSize(0);
p3.setSubpopulationSize(0);
p4.setSubpopulationSize(0);
}

4020 early() {
    sim.addSubpopSplit("p5", 50, p6);
}

4020 late(){
    p5.genomes.outputVCF(filePath="p5.vcf");
    sim.treeSeqOutput("ts.trees");
    sim.simulationFinished();
}
